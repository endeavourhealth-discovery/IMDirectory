import { Namespace, ConceptSummary, RecentActivityItem, HistoryItem, FilterOptions } from "@im-library/interfaces";

export interface RootState {
  // loading: Map<string, boolean>;
  conceptIri: string;
  findInTreeIri: string;
  searchResults: ConceptSummary[];
  searchLoading: boolean;
  history: HistoryItem[];
  favourites: string[];
  registeredUsername: string;
  recentLocalActivity: RecentActivityItem[];
  snomedLicenseAccepted: boolean;
  snomedReturnUrl: string;
  authReturnUrl: string;
  filterOptions: FilterOptions;
  filterDefaults: FilterOptions;
  selectedFilters: FilterOptions;
  quickFiltersStatus: any;
  focusHierarchy: boolean;
  sidebarControlActivePanel: number;
  // filters: {
  //   selectedStatus: string[];
  //   selectedSchemes: { iri: string; name: string }[];
  //   selectedTypes: string[];
  // };
  // term: string;
  // instanceIri: string;
  hierarchySelectedFilters: Namespace[];
  fontAwesomePro: boolean;
  arrayObjectNameListboxWithLabelStartExpanded: string[];
  tagSeverityMatches: any[];
  textDefinitionStartExpanded: string[];
  activeProfile: any;
  splitterRightSize: number;
  editorIri: string;
  editorSavedEntity: any;
  creatorSavedEntity: any;
  creatorHasChanges: boolean;
  editorHasChanges: boolean;
  findInEditorTreeIri: string;
  refreshEditorTree: boolean;
  showReleaseNotes: boolean;
  eclEditorSavedString: string;
  currentTheme: string;
  cookiesEssentialAccepted: boolean;
  cookiesOptionalAccepted: boolean;
  showCookieConsent: boolean;
  showBanner: boolean;
  previousAppUrl: string;
}
